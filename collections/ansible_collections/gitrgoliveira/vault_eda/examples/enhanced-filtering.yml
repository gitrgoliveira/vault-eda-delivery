---
# Enhanced Vault Event Filtering Examples
#
# This example demonstrates advanced filtering using event metadata fields including
# version tracking, modification flags, and plugin metadata. Shows how to distinguish
# between new secrets (version 1) and updated secrets (version > 1).
#
# Prerequisites:
#   - Vault Enterprise 1.13+ or HCP Vault Dedicated (Community Edition not supported)
#   - Vault server running and accessible
#   - Valid Vault token with appropriate permissions
#
# Usage:
#   export VAULT_ADDR="http://127.0.0.1:8200"
#   export VAULT_TOKEN="myroot"
#   ansible-rulebook --env-vars VAULT_ADDR,VAULT_TOKEN -i inventory.yml --rulebook enhanced-filtering.yml
#
# Testing:
#   # Create new secret (version 1) - triggers "New Secret Created" rule
#   vault kv put secret/new-test data=hello
#
#   # Update existing secret (version > 1) - triggers "Secret Updated" rule
#   vault kv put secret/new-test data=updated

- name: Enhanced Vault Event Monitoring
  hosts: localhost
  gather_facts: false

  sources:
    - gitrgoliveira.vault_eda.vault_events:
        vault_addr: "{{ VAULT_ADDR | default('http://127.0.0.1:8200') }}"
        vault_token: "{{ VAULT_TOKEN }}"
        event_paths:
          - "kv-v2/*"
        filter_expression: 'event_type == "kv-v2/data-write" or event_type == "kv-v2/data-patch"'
        verify_ssl: false
        ping_interval: 20

  rules:
    - name: New Secret Created
      condition: >
        event.data.event_type == "kv-v2/data-write" and
        event.data.event.metadata.current_version is defined and
        event.data.event.metadata.current_version == 1
      action:
        debug:
          msg: >
            New secret created: {{ event.data.event.metadata.data_path | default('N/A') }}
            (version {{ event.data.event.metadata.current_version | default('unknown') }})

    - name: Secret Updated
      condition: >
        event.data.event_type == "kv-v2/data-write" and
        event.data.event.metadata.current_version is defined and
        event.data.event.metadata.current_version != 1
      action:
        debug:
          msg: >
            Secret updated: {{ event.data.event.metadata.data_path | default('N/A') }}
            (now version {{ event.data.event.metadata.current_version | default('unknown') }})

    - name: Patch Operations
      condition: event.data.event_type == "kv-v2/data-patch"
      action:
        debug:
          msg: >
            Patch operation: {{ event.data.event.metadata.operation | default('data-patch') }}
            on {{ event.data.event.metadata.data_path | default('N/A') }}
